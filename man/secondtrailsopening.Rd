% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SecondTrailsOpening.R
\name{secondtrailsopening}
\alias{secondtrailsopening}
\title{Second trails opening}
\usage{
secondtrailsopening(
  topography,
  plotmask,
  maintrails,
  plotslope,
  harvestablepolygons,
  machinepolygons,
  treeselectionoutputs,
  scenario,
  winching = NULL,
  verbose = FALSE,
  advancedloggingparameters = loggingparameters()
)
}
\arguments{
\item{topography}{Digital terrain model (DTM) of the inventoried plot (LiDAR
or SRTM) (\code{\link{DTMParacou}}) (RasterLayer \strong{with a crs})}

\item{plotmask}{Inventoried plot mask (SpatialPolygonsDataFrame \strong{with a crs})}

\item{maintrails}{Main trails defined at the entire harvestable area (sf
linestring \strong{without crs})}

\item{plotslope}{Slopes (in radians) of the inventoried plot (with a
neighbourhood of 8 cells) (default:
\code{\link{HarvestableAreaOutputsCable}}) (RasterLayer \strong{with a crs})}

\item{harvestablepolygons}{Accessible area of the inventoried plot
(default: \code{\link{harvestableareadefinition}}) (sfc_MULTIPOLYGON)}

\item{machinepolygons}{Accessible for machine area of the inventoried plot
(default: \code{\link{harvestableareadefinition}}) (sf polygons data.frame)}

\item{treeselectionoutputs}{A list with:
\itemize{
\item your inventory with: "DistCriteria", "Slope", "SlopeCriteria",
"LoggingStatus", "Selected", "Up", "VolumeCumSum",
"ProbedHollowProba", "ProbedHollow" new columns
(see the outputs metadata in the vignette).
\item the objective volume with or without a bonus (if hollow trees exploitation)
\item 6 sets of spatial points:
harvestable, selected, future and reserve, hollow and fuel wood trees
}}

\item{scenario}{Logging scenario: "RIL1", "RIL2broken", "RIL2", "RIL3",
"RIL3fuel", "RIL3fuelhollow" or "manual"(character) (see the
vignette)}

\item{winching}{"0": no cable or grapple (trail to tree foot)
"1": only cable (default = 40m)
"2": grapple (default = 6m) + cable (grapple priority)
If grapple + cable (winching = "2") without fuel wood (fuel = "0")
recovery of the tree foot with grapple if possible (respected grapple
conditions) otherwise with cable with angle to the trail.
Avoidance of future/reserves if chosen.}

\item{verbose}{Allow to provide messages from internal functions (boolean)}

\item{advancedloggingparameters}{Other parameters of the logging simulator
\code{\link{loggingparameters}} (list)}
}
\value{
A list with :
\itemize{
\item inventory: Updated inventory
\item SmoothedTrails: Smoothed main and secondary trails polygons
\item TrailsDensity: Second trails density (in m/ha)
\item TrailsIdentity: information on sections of the trails (matrix) with:
\itemize{
\item LineID:
\item LoggedTrees: idTree of trees reached by the trails
\item TypeExpl: type of winching
(sfc_MULTIPOLYGON)
}
\item MainTrailsAccess : Random access point of maintrail for each PU
(sf, sfc_MULTIPOLYGON)
\item RawSecondTrails : non-smoothed secondary trails (SpatialLines)
\item CostRasterAgg: A cost Raster (RasterLayer)
}
}
\description{
Second trails opening
}
\examples{
set.seed(1)
data(Paracou6_2016)
data(DTMParacou)
data(PlotMask)
data(SpeciesCriteria)
data(HarvestableAreaOutputsCable)
data(MainTrails)

scenario <- "manual"
winching <- "2"
objective <- 10
fuel <- "2"
diversification <- TRUE

inventory <- addtreedim(cleaninventory(Paracou6_2016, PlotMask),
volumeparameters = ForestZoneVolumeParametersTable)

treeselectionoutputs <- suppressWarnings(treeselection(inventory,
  topography = DTMParacou,
  speciescriteria = SpeciesCriteria,
  scenario = "manual", objective = objective,
  fuel = fuel,
  diversification = diversification,
  winching = winching,
  specieslax = FALSE, objectivelax = TRUE,
  plotslope = HarvestableAreaOutputsCable$PlotSlope,
  harvestablepolygons = HarvestableAreaOutputsCable$HarvestablePolygons,
  advancedloggingparameters = loggingparameters()))

secondtrails <- secondtrailsopening(
  topography = DTMParacou,
  plotmask = PlotMask,
  maintrails = MainTrails,
  plotslope = HarvestableAreaOutputsCable$PlotSlope,
  harvestablepolygons = HarvestableAreaOutputsCable$HarvestablePolygons,
  machinepolygons = HarvestableAreaOutputsCable$MachinePolygons,
  treeselectionoutputs = treeselectionoutputs,
  scenario = "manual",
  winching = winching,
  advancedloggingparameters = loggingparameters())


library(ggplot2)
library(sf)

NewInventory <- treeselectionoutputs$inventory


Harvestable <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "harvestable"),
coords = c("Xutm", "Yutm")) \%>\%
st_set_crs(st_crs(secondtrails$MainTrailsAccess))

HarvestableUp <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "harvestableUp"),
coords = c("Xutm", "Yutm")) \%>\%
st_set_crs(st_crs(secondtrails$MainTrailsAccess))

Selected <- sf::st_as_sf(
dplyr::filter(NewInventory, Selected == "1"), coords = c("Xutm", "Yutm")) \%>\%
st_set_crs(st_crs(secondtrails$MainTrailsAccess))

Reserve <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "reserve"),
coords = c("Xutm", "Yutm")) \%>\%
st_set_crs(st_crs(secondtrails$MainTrailsAccess))

Future <- sf::st_as_sf(
dplyr::filter(NewInventory, LoggingStatus == "future"),
coords = c("Xutm", "Yutm")) \%>\%
st_set_crs(st_crs(secondtrails$MainTrailsAccess))

ProbedHollow <- sf::st_as_sf(
dplyr::filter(NewInventory, ProbedHollow == "1"),
 coords = c("Xutm", "Yutm")) \%>\%
st_set_crs(st_crs(secondtrails$MainTrailsAccess))

VisibleDefect <- sf::st_as_sf(
dplyr::filter(NewInventory, VisibleDefect == "1"),
 coords = c("Xutm", "Yutm")) \%>\%
st_set_crs(st_crs(secondtrails$MainTrailsAccess))


ggplot() +
  # Harvestable zones
  geom_sf(data = HarvestableAreaOutputsCable$HarvestablePolygons,
        fill = "olivedrab", alpha = 0.1) +
   geom_sf(data = HarvestableAreaOutputsCable$MachinePolygons,
        fill = "olivedrab", alpha = 0.5) +
  labs(alpha = "Harvestable") +
  labs(title = "P6 zones exploitables") +

  geom_sf(data = VisibleDefect,
  aes(colour = "Visible defect"), show.legend = "point") +
  # geom_sf(data = Future,
  # aes(colour = "Future"), show.legend = "point", size = 4) +
  geom_sf(data = Reserve,
  aes(colour = "Reserve"), show.legend = "point", size = 4) +
  geom_sf(data = Harvestable,
  aes(colour = "Harvestable"), show.legend = "point", size = 4) +
  geom_sf(data = HarvestableUp,
  aes(colour = "HarvestableUp"), show.legend = "point", size = 4) +
  geom_sf(data = Selected,
  aes(colour = "Selected"), show.legend = "point") +
  geom_sf(data = ProbedHollow,
  aes(colour = "Probed hollow"), show.legend = "point") +

  # 2ndary trails
    geom_sf(data = st_as_sf(secondtrails$SmoothedTrails), col = "darkgreen") +
    geom_sf(data = st_as_sf(secondtrails$MainTrailsAccess), col = "black") +

    scale_colour_manual(values = c("Visible defect" = "pink",
   "Harvestable" = "skyblue", "HarvestableUp" = "blue", "Selected" = "red",
   "Future" = "orange", "Reserve" = "purple", "Probed hollow" = "forestgreen",
  "Second trails" = "darkgreen", "Harvestable area" = "olivedrab"))

secondtrails$TrailsIdentity

}

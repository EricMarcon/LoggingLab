% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/treefelling.R
\name{rotatepolygon}
\alias{rotatepolygon}
\title{rotatepolygon}
\usage{
rotatepolygon(p, angle, fixed)
}
\arguments{
\item{p}{Polygon (POLYGON or sfc_POLYGON)}

\item{angle}{Angle in degrees in the clockwise direction (numeric)}

\item{fixed}{Fixed point on which the polygon will rotate (POINT)}
}
\value{
Your polygon (sfc_POLYGON) oriented at the given angle
}
\description{
Orient your polygon to a given angle and fixed point.
}
\examples{
data(Paracou6_2016)
data(DTMParacou)
data(PlotSlope)
data(SpeciesCriteria)

inventory <- addtreedim(inventorycheckformat(Paracou6_2016))
inventory <- suppressMessages(treeselection(inventory, objective = 20, scenario ="manual",
 fuel = "2", diversification = TRUE, specieslax = FALSE,
 objectivelax = FALSE, topography = DTMParacou, plotslope = PlotSlope,
 speciescriteria = SpeciesCriteria,
 advancedloggingparameters = loggingparameters())$inventory)

inventory <- inventory \%>\%
     dplyr::filter(Selected == "1") \%>\%
     dplyr::select(idTree,DBH,TrunkHeight,TreeHeight,CrownHeight,
     CrownDiameter,Selected, Xutm, Yutm)
dat <- inventory[1,]

library(sf)
library(nngeo)
library(dplyr)
Foot <- st_point(c(dat$Xutm,dat$Yutm)) # tree foot point
Crown <- dat \%>\%
dplyr::mutate(xCrown = Xutm,
       yCrown = Yutm + TrunkHeight + CrownHeight/2,
       exCrown = CrownDiameter/2,
       eyCrown = CrownHeight/2) \%>\%
st_as_sf(coords = c("xCrown", "yCrown")) # ellipse centroid coordinates
Crown <- st_ellipse(Crown, Crown$exCrown, Crown$eyCrown) # create the ellipse
Trunk <- with(dat, # and the trunk
              st_polygon(list(matrix(c(Xutm-(DBH/100)/2, Yutm,
                                      Xutm-(DBH/100)/2, Yutm + TrunkHeight,
                                      Xutm+(DBH/100)/2, Yutm + TrunkHeight,
                                      Xutm+(DBH/100)/2, Yutm,
                                      Xutm-(DBH/100)/2, Yutm) # the return
                                    ,ncol=2, byrow=TRUE))))
 RandomAngle <- as.numeric(sample(c(0:359.9), size = 1))

 TreeP <- st_difference(st_union(
 rotatepolygon(Trunk, angle = RandomAngle, fixed = Foot), # turned trunk
 rotatepolygon(Crown, angle = RandomAngle, fixed = Foot) # turned crown
 ))

library(ggplot2)
 ggplot() +
  geom_sf(data = st_union(Trunk, Crown), colour = "red") +
  geom_sf(data = TreeP, colour = "green")

}
